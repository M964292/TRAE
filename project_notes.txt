# История разработки проекта тестирования школьников

## 1. Старт проекта (17.05.2024)
- Сформирована структура папок и файлов:
  - app/ (backend на FastAPI)
  - tests_data/ (папки с тестами и результатами)
  - frontend/ (React-приложение)
  - requirements.txt, package.json
- Описана архитектура и основные требования к системе.
## 2. Базовый backend (FastAPI) (17.05.2024)
- Создан файл app/main.py с базовой настройкой FastAPI и CORS для фронтенда.
- Добавлен тестовый эндпоинт GET / для проверки запуска сервера.
## 3. Модели данных backend (17.05.2024)
- Создан файл app/models.py с моделями:
  - Student (ФИО, уровень, код предмета, вариант)
  - Question (id, текст, варианты, правильный ответ, сложность, балл, картинка)
  - Test (название, список вопросов)
  - Result (ФИО, время начала/конца, ответы, итоговый балл)
  ## 4. Работа с файлами (storage.py) (17.05.2024)
- Создан файл app/storage.py для загрузки и сохранения вопросов и результатов тестов в формате JSON.
- Реализованы функции: load_questions, save_questions, load_results, save_result.
## 5. Аутентификация и утилиты (17.05.2024)
- Создан файл app/auth.py с функцией проверки пароля учителя.
- Создан файл app/utils.py с функцией получения текущего времени в формате ISO.
## 6. Основные эндпоинты backend (17.05.2024)
- В файле app/main.py реализованы эндпоинты для:
  - Получения списка тестов
  - Получения и редактирования вопросов теста
  - Начала и прохождения тестирования учеником с адаптацией сложности
  - Сохранения результатов тестирования
  - Просмотра результатов учителем (по паролю)
  - В файл app/main.py добавлены основные эндпоинты для работы с тестами, учениками и учителем, включая адаптивную логику сложности.
  ## 7. Начало frontend (React) (17.05.2024)
- Созданы файлы frontend/src/App.tsx (роутинг) и frontend/src/pages/Login.tsx (страница входа для ученика и учителя).